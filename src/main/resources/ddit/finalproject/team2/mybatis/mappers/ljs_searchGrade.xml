<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ddit.finalproject.team2.student.dao.Ljs_ISearchGradeDao">
	<resultMap type="Ljs_SearchGradeVo" id="averageMap">
		<id property="semester.openseme_no" column="OPENSEME_NO"/>
		<association property="semester" autoMapping="true" javaType="OpenSemesterVo" />
		<association property="me" autoMapping="true" javaType="StudentVo" column="USER_ID" select="selectStudent"/>
		<collection property="lectureList" autoMapping="true" ofType="LectureVo">
			<id property="lecture_code" column="LECTURE_CODE"/>
		</collection>
		<collection property="averageList" autoMapping="true" ofType="GradeVo">
			<id property="grade_no" column="GRADE_NO"/>
		</collection>
	</resultMap>
	<select id="selectAverageList" parameterType="string" resultMap="averageMap">
		SELECT A.OPENSEME_NO, A.OPENSEME_YEAR, A.OPENSEME_SEMESTER
		    , B.LECTURE_CODE, B.LECTURE_NAME, B.LECTURE_CREDIT
		    , C.USER_ID, S.CURRENT_YEAR, C.ATTEND_NO, D.GRADE_NO, D.AVERAGE
		FROM OPENSEMESTER A LEFT OUTER JOIN LECTURE B
		ON(A.OPENSEME_NO = B.OPENSEME_NO)
		LEFT OUTER JOIN ATTEND C
		ON(B.LECTURE_CODE = C.LECTURE_CODE)
		LEFT OUTER JOIN STUDENT S
		ON(C.USER_ID = S.USER_ID)
		LEFT OUTER JOIN GRADE D
		ON(C.ATTEND_NO = D.ATTEND_NO)
		WHERE C.USER_ID = #{user_id}
		ORDER BY A.OPENSEME_YEAR, A.OPENSEME_SEMESTER ASC
	</select>
	
	<select id="selectStudent" parameterType="string" resultType="StudentVo">
		SELECT CURRENT_YEAR FROM STUDENT WHERE USER_ID = #{user_id}
	</select>
	
	<resultMap type="Ljs_GradeDetailVo" id="detailMap">
		<id property="lecture.lecture_code" column="LECTURE_CODE"/>
		<association property="lecture" autoMapping="true" javaType="LectureVo" />
		<association property="grade" autoMapping="true" javaType="GradeVo" />
	</resultMap>
	<select id="selectGradeDetail" parameterType="Ljs_GradeDetailVo" resultMap="detailMap">
		SELECT A.OPENSEME_NO, B.LECTURE_CODE, B.LECTURE_NAME, B.LECTURE_CREDIT
			, B.LECTURE_COURSETYPE, B.USER_ID, B.LECTURE_CURRENT
			, (SELECT USER_NAME FROM USERS U WHERE U.USER_ID = B.USER_ID) PROFESSOR_NAME
			, C.ATTEND_NO, D.GRADE_NO, D.AVERAGE
		FROM OPENSEMESTER A LEFT OUTER JOIN LECTURE B
		ON(A.OPENSEME_NO = B.OPENSEME_NO)
		LEFT OUTER JOIN ATTEND C
		ON(B.LECTURE_CODE = C.LECTURE_CODE)
		LEFT OUTER JOIN GRADE D
		ON(C.ATTEND_NO = D.ATTEND_NO)
		WHERE C.USER_ID = #{user_id} AND A.OPENSEME_NO = #{openseme_no}
		ORDER BY B.LECTURE_CODE ASC
	</select>
	
</mapper>