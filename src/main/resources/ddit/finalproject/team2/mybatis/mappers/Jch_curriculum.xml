<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ddit.finalproject.team2.admin.dao.Jch_CurriculumDao">
	
	<select id="getProfList" resultType="ddit.finalproject.team2.vo.Jch_UserVo">
		SELECT USER_ID, USER_NAME FROM USERS WHERE USER_AUTHORITY='교수'
	</select>
	
	<select id="getLowerList" resultType="ddit.finalproject.team2.vo.Jch_LectureVo">
		SELECT DISTINCT LOWER_ORGANIZATION FROM LECTURE
	</select>
	
	<select id="getOpenSemester" resultType="ddit.finalproject.team2.vo.Jch_OpenSemesterVo">
		SELECT * 
		FROM (
		        SELECT 
		            OPENSEME_NO, 
		            LEAD(OPENSEME_NO) OVER (ORDER BY TO_NUMBER(OPENSEME_NO)) NEXT_OPENSEME_NO,
		            LEAD(OPENSEME_YEAR) OVER (ORDER BY TO_NUMBER(OPENSEME_NO)) NEXT_OPENSEME_YEAR, 
		            LEAD(OPENSEME_SEMESTER) OVER (ORDER BY TO_NUMBER(OPENSEME_NO)) NEXT_OPENSEME_SEMESTER
		        FROM OPENSEMESTER 
		    )
		WHERE OPENSEME_NO =(
		        SELECT OPENSEME_NO 
		        FROM OPENSEMESTER 
		        <![CDATA[ WHERE SYSDATE > OPENSEME_PERIOD1 AND SYSDATE <OPENSEME_PERIOD2 ]]> 
		    )
	</select>
	
	<insert id="insertLecutre" parameterType="ddit.finalproject.team2.vo.Jch_LectureVo">
		<selectKey resultType="string" keyProperty="lecture_code" order="BEFORE">
			SELECT AAA||LPAD(NVL(max(REGEXP_REPLACE(lecture_code, '[^0-9]')), 0)+1, 3, '0') as lecture_code 
			FROM  (
					SELECT REGEXP_REPLACE(lecture_code, '[0-9]') as AAA ,  lecture_code 
					FROM lecture 
					WHERE lower_organization=#{lower_organization}
				) 
			GROUP BY AAA
		</selectKey>
		INSERT INTO lecture (
		    LECTURE_CODE, USER_ID, LECTURE_COURSETYPE, LECTURE_NAME, LECTURE_CREDIT,
		    LECTURE_TARGET, OPENSEME_NO, LECTURE_CAPACITY, MID_DATE, FINAL_DATE,
		    LOWER_ORGANIZATION, LECTURE_CURRENT
		) VALUES (
		    #{lecture_code},
		    #{user_id},
		    #{lecture_coursetype},
		    #{lecture_name},
		    #{lecture_credit},
		    #{lecture_target},
		    #{openseme_no},
		    '0',
		    SYSDATE,
		    SYSDATE,
		    #{lower_organization, jdbcType=VARCHAR},
		    '0'
		)
	</insert>
	
	<select id="getLectureList" resultType="ddit.finalproject.team2.vo.Jch_LectureVo" parameterType="string">
		SELECT NVL(COUNT_LECTURE, 0) AS CHECKLEC, NVL(COUNT_LECPLAN, 0) AS CHECKPLAN, L.*, O.OPENSEME_NO, O.OPENSEME_YEAR, O.OPENSEME_SEMESTER, U.USER_NAME 
		FROM LECTURE L LEFT OUTER JOIN (SELECT LECTURE_CODE, COUNT(CLASS_IDENTIFYING_CODE) AS COUNT_LECTURE FROM LECTUREWEEK GROUP BY LECTURE_CODE) LW ON (L.LECTURE_CODE=LW.LECTURE_CODE) 
			LEFT OUTER JOIN (SELECT LECTURE_CODE, COUNT(LECTURE_CODE) AS COUNT_LECPLAN FROM LECTUREPLAN GROUP BY LECTURE_CODE) LP ON (L.LECTURE_CODE=LP.LECTURE_CODE) 
			LEFT OUTER JOIN OPENSEMESTER O ON (O.OPENSEME_NO=L.OPENSEME_NO) 
			LEFT OUTER JOIN USERS U ON(L.USER_ID=U.USER_ID) 
		WHERE L.USER_ID=#{name}
	</select>
	
	<insert id="insertLectureWeekList" parameterType="ddit.finalproject.team2.vo.Jch_LectureWeekVo">
		INSERT ALL
		<foreach collection="lecWeek_list" item="item">
			INTO LECTUREWEEK (  CLASS_IDENTIFYING_CODE, LECTURE_CODE, LECTURE_CLASS, LECTURE_WEEK, LECTURE_SUBNAME ) 
			VALUES ( #{item.class_identifying_code}, #{item.lecture_code}, #{item.lecture_class}, #{item.lecture_week}, #{item.lecture_subname} )
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<select id="getLectureCode" parameterType="string" resultType="int">
		SELECT COUNT(LECTURE_CODE) FROM LECTUREWEEK WHERE LECTURE_CODE = #{code}
	</select>
	
	<select id="getProfInfo" parameterType="string" resultType="ddit.finalproject.team2.vo.Jch_UserVo">
		SELECT * FROM USERS U LEFT OUTER JOIN PROFESSOR P ON (U.USER_ID=P.USER_ID) WHERE U.USER_ID=#{name}
	</select>
	<select id="getLecturePlanVO" resultType="ddit.finalproject.team2.vo.Jch_LecturePlanVo">
		SELECT * FROM LECTUREPLAN WHERE LECTURE_CODE= 'lecture_code_1'
	</select>
	
	<insert id="insertLecturePlan" parameterType="ddit.finalproject.team2.vo.Jch_LecturePlanVo">
		INSERT INTO lectureplan (
		    LECTURE_CODE, WEEK_CONTENT, ASSIGNMENT_INFO, INTRODUCTION,
		    LEC_PLAN_SUMMARY, LEC_PLAN_METHOD, BOOK_MATERIAL
		) VALUES (
		    #{lecture_code}, #{week_content}, #{assignment_info}, #{introduction},
		    #{lec_plan_summary}, #{lec_plan_method}, #{book_material}
		)  
	</insert>
	
	<select id="getLecturePlanView" parameterType="string" resultType="ddit.finalproject.team2.vo.Jch_LecturePlanVo">
		SELECT 
			LECTURE_CODE, WEEK_CONTENT, ASSIGNMENT_INFO, INTRODUCTION,
			LEC_PLAN_SUMMARY, LEC_PLAN_METHOD, BOOK_MATERIAL
		FROM LECTUREPLAN
		WHERE LECTURE_CODE=#{no}
	</select>
	
	<select id="getLectureData" parameterType="string" resultType="ddit.finalproject.team2.vo.Jch_LectureVo">
		SELECT L.*, O.OPENSEME_YEAR||'년 '||O.OPENSEME_SEMESTER||'학기' AS OPENSEME_HAKI 
		FROM LECTURE L LEFT OUTER JOIN OPENSEMESTER O ON(L.OPENSEME_NO=O.OPENSEME_NO) 
		WHERE LECTURE_CODE=#{no}
	</select>
	
	<update id="updateLecutre" parameterType="ddit.finalproject.team2.vo.Jch_LectureVo">
		UPDATE LECTURE 
		SET lecture_coursetype=#{lecture_coursetype}
		    , lecture_name=#{lecture_name}
		    , lecture_credit=#{lecture_credit}
		    , lecture_target=#{lecture_target}
		    , lecture_capacity=#{lecture_capacity}
		    , mid_date=#{mid_date}
		    , final_date=#{final_date}
		    , lower_organization=#{lower_organization}
		WHERE LECTURE_CODE=#{lecture_code}
	</update>
	
</mapper>