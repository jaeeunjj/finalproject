<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ddit.finalproject.team2.admin.dao.Jch_CurriculumDao">
	
	<select id="getProfList" resultType="ddit.finalproject.team2.vo.Jch_UserVo">
		SELECT USER_ID, USER_NAME FROM USERS WHERE USER_AUTHORITY='교수'
	</select>
	
	<select id="getLowerList" resultType="ddit.finalproject.team2.vo.Jch_LectureVo">
		SELECT DISTINCT LOWER_ORGANIZATION FROM LECTURE
	</select>
	
	<select id="getOpenSemester" resultType="ddit.finalproject.team2.vo.Jch_OpenSemesterVo">
		SELECT * 
		FROM (
		        SELECT 
		            OPENSEME_NO, 
		            LEAD(OPENSEME_NO) OVER (ORDER BY TO_NUMBER(OPENSEME_NO)) NEXT_OPENSEME_NO,
		            LEAD(OPENSEME_YEAR) OVER (ORDER BY TO_NUMBER(OPENSEME_NO)) NEXT_OPENSEME_YEAR, 
		            LEAD(OPENSEME_SEMESTER) OVER (ORDER BY TO_NUMBER(OPENSEME_NO)) NEXT_OPENSEME_SEMESTER
		        FROM OPENSEMESTER 
		    )
		WHERE OPENSEME_NO =(
		        SELECT OPENSEME_NO 
		        FROM OPENSEMESTER 
		        <![CDATA[ WHERE SYSDATE > OPENSEME_PERIOD1 AND SYSDATE <OPENSEME_PERIOD2 ]]> 
		    )
	</select>
	
	<insert id="insertLecutre" parameterType="ddit.finalproject.team2.vo.Jch_LectureVo">
		<selectKey resultType="string" keyProperty="lecture_code" order="BEFORE">
			SELECT AAA||LPAD(NVL(max(REGEXP_REPLACE(lecture_code, '[^0-9]')), 0)+1, 3, '0') as lecture_code 
			FROM  (
					SELECT REGEXP_REPLACE(lecture_code, '[0-9]') as AAA ,  lecture_code 
					FROM lecture 
					WHERE lower_organization=#{lower_organization}
				) 
			GROUP BY AAA
		</selectKey>
		INSERT INTO lecture (
		    LECTURE_CODE, USER_ID, LECTURE_COURSETYPE, LECTURE_NAME, LECTURE_CREDIT,
		    LECTURE_TARGET, OPENSEME_NO, LECTURE_CAPACITY, MID_DATE, FINAL_DATE,
		    LOWER_ORGANIZATION, LECTURE_CURRENT
		) VALUES (
		    #{lecture_code},
		    #{user_id},
		    #{lecture_coursetype},
		    #{lecture_name},
		    #{lecture_credit},
		    #{lecture_target},
		    #{openseme_no},
		    #{lecture_capacity, jdbcType=VARCHAR},
		    #{mid_date, jdbcType=DATE},
		    #{final_date, jdbcType=DATE},
		    #{lower_organization, jdbcType=VARCHAR},
		    #{lecture_current, jdbcType=VARCHAR}
		)
	</insert>
	
	<select id="getLectureList" resultType="ddit.finalproject.team2.vo.Jch_LectureVo" parameterType="string">
		SELECT
		    O.OPENSEME_NO, O.OPENSEME_YEAR, O.OPENSEME_SEMESTER, U.USER_NAME,
		    L.LECTURE_CODE, L.USER_ID, L.LECTURE_COURSETYPE, L.LECTURE_NAME, L.LECTURE_CREDIT,
		    L.LECTURE_TARGET, L.LECTURE_CAPACITY, L.MID_DATE, L.FINAL_DATE,
		    L.LOWER_ORGANIZATION, L.LECTURE_CURRENT
		FROM
		    OPENSEMESTER O INNER JOIN LECTURE L ON (O.OPENSEME_NO=L.OPENSEME_NO) INNER JOIN USERS U ON(L.USER_ID=U.USER_ID)
		WHERE L.USER_ID = #{name}
	</select>
	
</mapper>