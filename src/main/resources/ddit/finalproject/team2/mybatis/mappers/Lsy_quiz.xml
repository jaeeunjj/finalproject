<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ddit.finalproject.team2.myPack.dao.LSY_QuizDAO">
	
	<resultMap type="ddit.finalproject.team2.vo.Lsy_QuizQuestionVO" id="allQ" autoMapping="true">
		<id property="question_no" column="QUESTION_NO"/>
		<collection property="problemList" autoMapping="true" ofType="ddit.finalproject.team2.vo.Lsy_QuizProblemVo">
			<id property="quizProblem_no" column="QUIZPROBLEM_NO"/>
		</collection>
	</resultMap>
	
	<resultMap type="ddit.finalproject.team2.vo.Lsy_ExamVo" id="allExam" autoMapping="true">
		<id property="exam_no" column="EXAM_NO"/>
			<collection property="questionList" autoMapping="true" ofType="ddit.finalproject.team2.vo.Lsy_ExamQuestionVo">
			<id property="question_no" column="QUESTION_NO"></id>
				<collection property="problemList" autoMapping="true" ofType="ddit.finalproject.team2.vo.Lsy_ExamProblemVo">
					<id property="problem_no" column="PROBLEM_NO"/>
			</collection>
		</collection>
	</resultMap>
	
	<resultMap type="ddit.finalproject.team2.vo.Lsy_LectureInfos" id="lectureInfo" autoMapping="true">
		<id property="lecture_code" column="LECTURE_CODE"/>
		<collection property="lectureWeekInfos" autoMapping="true" ofType="ddit.finalproject.team2.vo.Lsy_LectureWeekVo">
			<id property="lecture_week" column="LECTURE_WEEK"/>
			<collection property="lectureWeekClass" autoMapping="true" ofType="ddit.finalproject.team2.vo.Lsy_LectureWeekClassVo">
			</collection>
		</collection>
	</resultMap>
	
	<select id="keyNextVal" resultType="String">
		<![CDATA[
		select quizseq.nextval
		from dual
		connect by level <= #{size}
		]]>
	</select>
	
	<select id="stAnswerNextVal" resultType="String">
		<![CDATA[
		select stQuiz_seq.nextval
		from dual
		connect by level <= #{size}
		]]>
	</select>
	
	<select id="examNoNextVal" resultType="String">
		select exam_no_seq.nextval
		from dual
	</select>
	
	<select id="problemNoSeqVal" resultType="String">
		<![CDATA[
		SELECT PROBLEM_NO_PRE_SEQ.nextval||PROBLEM_NO_SUF_SEQ.nextval
		FROM dual
		connect by level <= #{size}
		]]>
	</select>
	
	<select id="answerNoSeqVal" resultType="String">
		<![CDATA[
		SELECT EXAM_ANSWER_NO_SEQ.nextval
		FROM dual
		connect by level <= #{size}
		]]>
	</select>
	
	<select id="selectStudyCode" parameterType="java.util.HashMap" resultType="ddit.finalproject.team2.vo.Lsy_ExamVo">
		select es.evalstudy_code, e.exam_no 
         from evaluationstudy es, exam e 
         where es.lecture_code = #{lecture_code} 
         and es.evalstudy_code = (select ev.evalstudy_code from evaluationstudy ev where ev.lecture_code = #{lecture_code} and ev.evalstudy_type like #{exam_type}||'%')
         and e.exam_type like #{exam_type}||'%'
	</select>
	
	<select id="selectExamNo" parameterType="java.util.HashMap" resultType="String">
		select exam_no
		from exam
		where exam_type like #{exam_type}||'%'
		and evalstudy_code = #{evalstudy_code};
	</select>
	
	<select id="markingTest" parameterType="ddit.finalproject.team2.vo.Lsy_EmbraceAnswer" resultType="ddit.finalproject.team2.vo.Lsy_QuizQuestionVO">
		SELECT
		    question_no,
		    question_content,
		    question_answer,
		    class_identifying_code,
		    lecture_code
		FROM quizquestion
		WHERE question_answer in
		<foreach item="answer" collection="answerList" open="(" close=")" separator=",">
			#{answer.stSelect_no}
		</foreach>
	</select>
	
	<select id="selectExamList" parameterType="java.util.HashMap" resultMap="allExam">
		select *
		from exam e inner join examquestion eq on e.exam_no = eq.exam_no
		            left outer join examproblem ep on eq.question_no = ep.question_no
		where e.evalstudy_code = #{evalCode}
		and e.exam_type like #{exam_type}||'%'
		and ep.exam_no = #{examNo}
	</select>
	
	<insert id="insertQuiz" parameterType="ddit.finalproject.team2.vo.Lsy_EmbraceQuizVo">
		INSERT ALL
			<foreach collection="quizList" item="quiz">
			into QUIZQUESTION
				( QUESTION_NO, QUESTION_CONTENT, QUESTION_ANSWER, CLASS_IDENTIFYING_CODE, LECTURE_CODE ) 
			values
					(
					#{quiz.question_no}, #{quiz.question_content}, 
					#{quiz.question_answer}, #{quiz.class_identifying_code},
					#{quiz.lecture_code}
					)
				<foreach collection="quiz.problemList" item="problem">
					into QUIZPROBLEM
						( quizProblem_no, quizProblem_content, question_no )
					values
				 		(
						#{problem.quizProblem_no}, #{problem.quizProblem_content}, 
						#{quiz.question_no}
						)
				</foreach>
			</foreach>
		select * from dual
	</insert>
	
	<insert id="insertStAnswer" parameterType="ddit.finalproject.team2.vo.Lsy_EmbraceAnswer">
		INSERT ALL
			<foreach collection="answerList" item="answer">
					into QUIZSTUDENTANSWER
						(QUESTION_NO, STSELECT_NO, ATTEND_NO, QUIZANSWER_CODE)
					values
						(
						  #{answer.question_no}, #{answer.stSelect_no}, #{answer.attend_no}, #{answer.quizAnswer_code}
						)
			</foreach>
			select * from dual
	</insert>
		
	<insert id="insertExam" parameterType="ddit.finalproject.team2.vo.Lsy_EmbraceExamVo">
		INSERT ALL
		<foreach collection="examList" item="examVo">
			INTO EXAM
				(EXAM_NO, EXAM_TYPE, EVALSTUDY_CODE)
			values
				(#{examVo.exam_no}, #{examVo.exam_type}, #{examVo.evalStudy_code})
			<foreach collection="examVo.questionList" item="examQuestionVo">
				INTO EXAMQUESTION
					(QUESTION_NO, SUBJECTIVE_ANSWER, EXAM_NO, QUESTION_CONTENT, OBJECTIVE_ANSWER)
				VALUES
					(#{examQuestionVo.question_no}, #{examQuestionVo.subjective_answer}, 
					#{examVo.exam_no}, #{examQuestionVo.question_content}, #{examQuestionVo.objective_answer})
					<foreach collection="examQuestionVo.problemList" item="examProblemVo">
						INTO EXAMPROBLEM
						(PROBLEM_NO, PROBLEM_CONTENT, EXAM_NO, QUESTION_NO)
						VALUES ( 
						#{examProblemVo.problem_no}, #{examProblemVo.problem_content}, #{examVo.exam_no}, #{examQuestionVo.question_no}
						 )
					</foreach>
			</foreach>
		</foreach>
		select * from dual
	</insert>
	
	<insert id="insertExamAnswer" parameterType="ddit.finalproject.team2.vo.Lsy_EmbraceExamAnswer">
		INSERT ALL
		<foreach collection="answerList" item="examAnswerVo">
			INTO EXAMANSWER 
				( exam_no, attend_no, question_no, problem_no, answer_no, subjective_answer ) 
			VALUES 
			( #{examAnswerVo.exam_no}, #{examAnswerVo.attend_no}, #{examAnswerVo.question_no},
			  #{examAnswerVo.problem_no}, #{examAnswerVo.answer_no}, #{examAnswerVo.subjective_answer} 
			)
		</foreach>
		select * from dual
	</insert>
	
	<update id="updateQuiz" parameterType="ddit.finalproject.team2.vo.Lsy_QuizQuestionVO">
		update quizquestion
		set  question_no = #{question_no}, question_content = #{question_content}, 
			 question_answer = #{question_answer}
		where question_no = #{question_no} 
		and lecture_code = #{lecture_code}
		and class_identifying_code = #{class_identifying_code}
	</update>
	
	<update id="updateQuizProblems" parameterType="ddit.finalproject.team2.vo.Lsy_QuizProblemVo">
		update quizproblem
		set quizProblem_content = #{quizProblem_content}
		where question_no = #{question_no}
		and quizProblem_no = #{quizProblem_no}
	</update>
	
	
	<update id="updateExam" parameterType="ddit.finalproject.team2.vo.Lsy_ExamQuestionVo">
		update EXAMQUESTION
		set question_content = #{question_content},
				objective_answer = #{objective_answer},
				subjective_answer = #{subjective_answer}
		where exam_no = #{exam_no}
		and question_no = #{question_no}
	</update>
	
	<update id="updateExamProblems" parameterType="ddit.finalproject.team2.vo.Lsy_ExamProblemVo">
		update EXAMPROBLEM
		set problem_content = #{problem_content}
		where exam_no = #{exam_no}
		and question_no = #{question_no}
		and problem_no = #{problem_no}
	</update>
	
	<select id="selectOneExam" parameterType="java.util.HashMap" resultMap="allExam">
		select *
		from examquestion eq inner join exam e on e.exam_no = eq.exam_no
		                     inner join examproblem ep on eq.question_no = ep.question_no
		where ep.exam_no = #{exam_no}
		and exam_type like #{exam_type}||'%'
	</select>
	
	<select id="selectOneQuiz" parameterType="ddit.finalproject.team2.vo.Lsy_QuizQuestionVO" resultMap="allQ">
		select * from quizquestion q inner join quizproblem p on q.question_no = p.question_no
		where q.question_no = #{lecture_code}
	</select>
	
	<select id="selectLectureInfoForViews" parameterType="String" resultMap="lectureInfo">
		select *
		from lecture l inner join lectureweek lw on l.lecture_code = lw.lecture_code
		where l.lecture_code = #{lecture_code}
	</select>
	
	<select id="selectLectureInfoForOneViews" parameterType="java.util.HashMap" resultMap="lectureInfo">
		select *
		from lecture l inner join lectureweek lw on l.lecture_code = lw.lecture_code
		where l.lecture_code = #{lecture_code}
		and lw.class_identifying_code = #{class_identifying_code}
	</select>
	
	<select id="selectLectureInfoForList" parameterType="java.util.HashMap" resultType="ddit.finalproject.team2.vo.Lsy_LectureInfos">
		select l.lecture_code, l.user_id, l.lecture_coursetype, l.lecture_name, l.lecture_credit,
        l.lecture_target||'학년' lecture_target, l.lecture_current||'/'||l.lecture_capacity lecture_capacity,
        l.lower_organization, lw.lecture_class||'교시' lecture_class,
        lw.lecture_week||'주' lecture_week, lw.lecture_subname
		from lecture l inner join lectureweek lw on l.lecture_code = lw.lecture_code
		where l.user_id = #{user_id}
		and l.lower_organization = #{prof_degree}
	</select>
	
	<select id="selectProInfos" resultType="ddit.finalproject.team2.vo.ProfessorVo">
		select *
		from professor
		where user_id = #{user_id}
	</select>
	
	<select id="selectQuizList" parameterType="ddit.finalproject.team2.vo.Lsy_QuizQuestionVO" resultMap="allQ">
		select
		   qn.question_no, qn.question_content, qn.question_answer, qn.class_identifying_code,
		   qn.lecture_code,
		   p.quizproblem_no, p.quizproblem_content, p.question_no
		from quizproblem p,
			(select q.question_no, q.question_content, q.question_answer, q.class_identifying_code, q.lecture_code
			from quizquestion q where q.lecture_code = #{lecture_code}
								and q.class_identifying_code = #{class_identifying_code}) qn
		where p.question_no = qn.question_no
	</select>
	
	<select id="selectEvalStudyCodes" resultType="ddit.finalproject.team2.vo.Lsy_ExamVo">
		select evalstudy_code, evalstudy_type
		from evaluationstudy
		where lecture_code = #{lecture_code}
		and (evalstudy_type like '%'||'중간'||'%'
		or evalstudy_type like '%'||'기말'||'%')
	</select>
</mapper>

